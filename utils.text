adb kill-server
adb tcpip 5555
adb connect 10.0.0.35


¿Qué es la Inyección de Dependencias?
La inyección de dependencias es un patrón de diseño que permite a los 
objetos recibir sus dependencias desde el exterior, en lugar de crearlas 
ellos mismos. Esto tiene varias ventajas, entre ellas:

para que sirve 

Desacoplamiento: Permite que las clases estén menos acopladas entre sí, 
facilitando la prueba y el mantenimiento.

Pruebas Unitarias: Facilita la escritura de pruebas unitarias porque puedes inyectar versiones simuladas 
(mock) de tus dependencias.

Gestión de Ciclos de Vida: Controla la creación y destrucción de instancias de manera más eficiente.

GetIt: Es un paquete que permite implementar la inyección de dependencias de manera sencilla y efectiva 
en aplicaciones Dart y Flutter. 
Proporciona una forma de registrar y acceder a instancias de objetos.

El objetivo principal de este patrón es permitir que diferentes partes de tu aplicación se 
comuniquen entre sí de manera flexible y desacoplada. Con esta configuración, cada vez que 
necesites un servicio, repositorio o caso de uso en tu aplicación, solo necesitas usar sl<T>()
para obtener la instancia correspondiente.

la capa de domain repositorio es donde creamos los contratos para que puedan ser implementados 

  gradient: LinearGradient(
                  colors: isDarkMode
                      ? [Colors.blueGrey[800]!, Colors.blueGrey[700]!]
                      : [Colors.white, Colors.lightBlueAccent],
                  begin: Alignment.topLeft,
                  end: Alignment.bottomRight,
                ),




                // ignore_for_file: use_build_context_synchronously, prefer_const_constructors

import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:quickcar_aplication/core/configs/assets/app_images.dart';
import 'package:quickcar_aplication/presentation/auth/bloc/cubit/user_cubit.dart';
import 'package:quickcar_aplication/presentation/auth/bloc/state/user_state.dart';
import 'package:quickcar_aplication/presentation/auth/pages/api/get_user_data.dart';
import 'package:quickcar_aplication/presentation/screen/pages/search/search_page.dart';
import 'package:skeletonizer/skeletonizer.dart';
import 'package:auto_size_text/auto_size_text.dart';

class HomeComponentUserCard extends StatefulWidget {
  const HomeComponentUserCard({super.key});

  @override
  _HomeComponentUserCardState createState() => _HomeComponentUserCardState();
}

class _HomeComponentUserCardState extends State<HomeComponentUserCard> {
  bool isLoading = true;

  @override
  void initState() {
    super.initState();
    loadingFetch();
  }

  Future<void> loadingFetch() async {
    var result = await getUserData();
    if (result != null) {
      context.read<UserCubit>().updateFirstName(result.firstName);
      context.read<UserCubit>().updateLastName(result.lastName);
      context.read<UserCubit>().updateEmail(result.email);
      context.read<UserCubit>().updateProfileImgUrl(result.profileImgUrl);
    } else {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text("Error fetching user data")),
      );
    }
    setState(() {
      isLoading = false;
    });
  }

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    final isDarkMode = theme.brightness == Brightness.dark;

    // Obtiene las dimensiones de la pantalla para ajustes responsivos
    final screenWidth = MediaQuery.of(context).size.width;

    return BlocListener<UserCubit, UserState>(
      listener: (context, state) {
        if (state.errorMessage != null) {
          ScaffoldMessenger.of(context).showSnackBar(
            SnackBar(content: Text(state.errorMessage!)),
          );
        }
      },
      child: BlocBuilder<UserCubit, UserState>(
        builder: (context, state) {
          return Skeletonizer(
            enabled: isLoading,
            child: SingleChildScrollView(
              child: Column(
                children: [
                  Padding(
                    padding:
                        const EdgeInsets.symmetric(vertical: 0, horizontal: 10),
                    child: Container(
                      decoration: BoxDecoration(
                        border: Border.all(
                          color: theme.dividerColor.withOpacity(0.1),
                          width: 1,
                        ),
                        image: DecorationImage(
                          image: AssetImage(AppImages.gradiantGreenDart),
                          fit: BoxFit.cover,
                        ),
                        borderRadius:
                            const BorderRadius.all(Radius.circular(10.0)),
                        boxShadow: [
                          BoxShadow(
                            color: isDarkMode
                                ? Colors.black54
                                : Colors.grey.withOpacity(0.3),
                            offset: const Offset(0, 4),
                            blurRadius: 8,
                            spreadRadius: 1,
                          ),
                        ],
                      ),
                      padding: const EdgeInsets.all(10.0),
                      child: Row(
                        children: [
                          Column(
                            children: [
                              GestureDetector(
                                onTap: () {},
                                child: CircleAvatar(
                                  radius: screenWidth * 0.1,
                                  backgroundColor:
                                      isDarkMode ? Colors.black : Colors.black,
                                  child: CircleAvatar(
                                    radius: screenWidth * 0.09,
                                    backgroundImage: NetworkImage(
                                      state.profileImgUrl.isNotEmpty
                                          ? state.profileImgUrl
                                          : 'https://via.placeholder.com/150',
                                    ),
                                  ),
                                ),
                              ),
                              Wrap(
                                children: [
                                  AutoSizeText(
                                    state.role.toString().split('.').last,
                                    style: TextStyle(
                                      fontSize: screenWidth * 0.035,
                                      height: 1,
                                      fontWeight: FontWeight.w600,
                                      color: isDarkMode
                                          ? const Color.fromARGB(
                                              179, 255, 255, 255)
                                          : Colors.black54,
                                    ),
                                    maxLines: 1,
                                  ),
                                ],
                              ),
                            ],
                          ),
                          const SizedBox(width: 10),
                          Expanded(
                            child: Column(
                              crossAxisAlignment: CrossAxisAlignment.start,
                              children: [
                                Row(
                                  children: [
                                    Expanded(
                                      child: Column(
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: [
                                          AutoSizeText(
                                            "¡Hola de nuevo!",
                                            style: TextStyle(
                                              fontSize: screenWidth * 0.045,
                                              fontWeight: FontWeight.bold,
                                              color: isDarkMode
                                                  ? Colors.white
                                                  : Colors.black,
                                            ),
                                            maxLines: 1,
                                          ),
                                          Padding(
                                            padding: const EdgeInsets.symmetric(
                                                vertical: 0, horizontal: 5),
                                            child: AutoSizeText(
                                              "${state.firstName} ${state.lastName}",
                                              style: TextStyle(
                                                fontSize: screenWidth * 0.05,
                                                fontWeight: FontWeight.w900,
                                                color: isDarkMode
                                                    ? Colors.white
                                                    : Colors.black,
                                              ),
                                              maxLines: 1,
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    Column(
                                      children: [
                                        Container(
                                          padding: const EdgeInsets.all(10),
                                          decoration: const BoxDecoration(
                                            shape: BoxShape.circle,
                                            color:
                                                Color.fromARGB(255, 23, 112, 6),
                                          ),
                                          child: AutoSizeText(
                                            '3', // Cambia esto por la cantidad real de viajes
                                            style: TextStyle(
                                              color: Colors.white,
                                              fontWeight: FontWeight.bold,
                                              fontSize: screenWidth * 0.035,
                                            ),
                                            maxLines: 1,
                                          ),
                                        ),
                                        AutoSizeText(
                                          "Viajes totales",
                                          style: TextStyle(
                                            fontSize: screenWidth * 0.035,
                                            height: 1,
                                            fontWeight: FontWeight.bold,
                                            color: isDarkMode
                                                ? const Color.fromARGB(
                                                    255, 255, 255, 255)
                                                : Colors.black54,
                                          ),
                                          maxLines: 1,
                                        ),
                                      ],
                                    ),
                                  ],
                                ),
                                const SizedBox(height: 5),
                                Container(
                                  decoration: BoxDecoration(
                                    color: isDarkMode
                                        ? Color.fromARGB(255, 0, 0, 0)
                                        : Colors.white,
                                    borderRadius: const BorderRadius.all(
                                        Radius.circular(10.0)),
                                    boxShadow: [
                                      BoxShadow(
                                        color: isDarkMode
                                            ? Colors.black54
                                            : Colors.grey.withOpacity(0.3),
                                        offset: const Offset(0, 4),
                                        blurRadius: 8,
                                        spreadRadius: 1,
                                      ),
                                    ],
                                  ),
                                  child: const Padding(
                                    padding: EdgeInsets.all(7.0),
                                    child: AutoSizeText(
                                      "¿Listo para tu próximo viaje en Quickcar? Elige tu conductor y tu asiento",
                                      style: TextStyle(
                                        fontSize: 15,
                                        height: 1.3,
                                        fontWeight: FontWeight.w500,
                                      ),
                                      maxLines: 3,
                                    ),
                                  ),
                                ),
                                const SizedBox(height: 14),
                                Row(
                                  children: [
                                    Expanded(
                                      child: SizedBox(
                                        height: 35,
                                        child: ElevatedButton(
                                          style: ButtonStyle(
                                            backgroundColor:
                                                MaterialStateProperty.all(
                                              isDarkMode
                                                  ? Color.fromARGB(
                                                      255, 0, 114, 237)
                                                  : Color.fromARGB(
                                                      255, 6, 143, 255),
                                            ),
                                          ),
                                          onPressed: () {
                                            Navigator.push(
                                              context,
                                              MaterialPageRoute(
                                                  builder: (context) =>
                                                      const SearchPage()),
                                            );
                                          }, // Acción del botón Buscar Viaje
                                          child: const AutoSizeText(
                                            "Buscar Viaje",
                                            style: TextStyle(
                                              fontSize: 14,
                                              height: 1,
                                              fontWeight: FontWeight.bold,
                                              color: Colors.white,
                                            ),
                                            maxLines: 1,
                                          ),
                                        ),
                                      ),
                                    ),
                                    const SizedBox(width: 10),
                                    Expanded(
                                      child: SizedBox(
                                        height: 35,
                                        child: ElevatedButton(
                                          style: ButtonStyle(
                                            backgroundColor:
                                                MaterialStateProperty.all(
                                              isDarkMode
                                                  ? Color.fromARGB(
                                                      255, 209, 137, 4)
                                                  : Color.fromARGB(
                                                      255, 209, 137, 4),
                                            ),
                                          ),
                                          onPressed: () {
                                            // Acción del botón Mis viajes
                                          },
                                          child: const AutoSizeText(
                                            "Mis viajes",
                                            style: TextStyle(
                                              fontSize: 14,
                                              height: 1,
                                              fontWeight: FontWeight.bold,
                                              color: Colors.white,
                                            ),
                                            maxLines: 1,
                                          ),
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              ],
                            ),
                          ),
                        ],
                      ),
                    ),
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}
